version: '3.4'

networks:
  db:
  request:

services:
  # Nginx
  nginx:
    image: nginx:alpine
    container_name: dg_nginx
    volumes:
      - ./:/var/www
      - ./docker/log/nginx:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/config.template:ro
    networks:
      - request
    ports:
      - 80:80
      - 443:443
    depends_on:
      - php
    environment:
      NGINX_HOST: ${HOST}
    cap_add:
      - SYS_TIME
    restart: always
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/config.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  # PHP-FPM
  php:
    build: ./docker/php
    container_name: php
    volumes:
      - ./backend:/var/www/backend
      - ./docker/log/php:/var/log/php
      - ./docker/php/php.ini:/etc/php/php.ini:ro
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    networks:
      - request
      - db
    expose:
      - 9000
    cap_add:
      - SYS_TIME
    depends_on:
      - mysql
    restart: always

  # MySQL
  mysql:
    image: percona:5.7.23
    container_name: dg_mysql
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/log/mysql:/var/log/mysql
    networks:
      - db
    expose:
      - 3306
    ports:
      - 127.0.0.1:3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
    cap_add:
      - SYS_TIME
    restart: always
    command: "mysqld --collation-server=utf8_general_ci --character-set-server=utf8 --max_allowed_packet=3M"

  redis:
    image: redis:alpine
    container_name: dg_redis
    networks:
      - db
    expose:
      - 6379
    cap_add:
      - SYS_TIME
    restart: always
